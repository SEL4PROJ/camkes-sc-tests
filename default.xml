<?xml version="1.0" encoding="UTF-8"?>

<!--
     Copyright 2015, NICTA

     This software may be distributed and modified according to the terms of
     the BSD 2-Clause license. Note that NO WARRANTY is provided.
     See "LICENSE_BSD2.txt" for details.

     @TAG(NICTA_BSD)
  -->

<manifest>
    <remote name="seL4"
        fetch="../seL4"
    />

    <remote name="seL4-projects"
        fetch="../seL4-projects"
    />

    <!-- create a remote for fetching seL4 scheduling related repositories -->
    <remote name="sched"
        fetch="../alyons"
    />

    <remote name="ikuz"
	fetch="../ikuz"
    />

    <!-- default revision for each project, and name of the remote -->
    <default revision="master"
        remote="seL4"
    />

    <!-- list of 'projects' (i.e repositories), path is relative to the path in remote above -->
    <project remote="ikuz" name="camkes-sc-tests.git" path="projects/camkes-sc-tests" revision="master">
        <linkfile src="Kconfig" dest="Kconfig"/>
        <linkfile src="configs" dest="configs"/>
	<linkfile src="apps/sc" dest="apps/sc"/>
    </project>

    <!-- kernel (forked rt version) -->
    <project remote="sched" name="seL4.git" path="kernel" revision="rt">
        <linkfile src="libsel4" dest="libs/libsel4"/>
    </project>

    <project name="seL4_tools.git" path="projects/seL4_tools">
        <linkfile src="common-tool" dest="tools/common"/>
        <linkfile src="elfloader-tool" dest="tools/elfloader"/>
        <linkfile src="kbuild-tool" dest="tools/kbuild"/>
    </project>

    <!-- camkes (forked sc version) -->
    <project remote = "ikuz" name="camkes-tool.git" path="tools/camkes" revision="sc">
        <linkfile src="toplevel.mk" dest="Makefile"/>
        <linkfile src="Kbuild" dest="Kbuild"/>
        <linkfile src="libsel4camkes" dest="libs/libsel4camkes"/>
        <linkfile src="libsel4muslccamkes" dest="libs/libsel4muslccamkes"/>
        <linkfile src="docs/index.md" dest="README.md"/>
    </project>

    <!-- capdl (forked sc version) -->
    <project remote="ikuz" name="capdl.git" path="projects/capdl" revision="sc">
        <linkfile src="capdl-loader-app" dest="apps/capdl-loader-experimental"/>
        <linkfile src="capDL-tool" dest="tools/capDL"/>
        <linkfile src="python-capdl-tool" dest="tools/python-capdl"/>
    </project>

    <project name="pruner.git" path="tools/pruner"/>

    <!-- scheduling library - TODO integrate at some point -->
    <project remote="sched" name="libsel4sched.git" path="libs/libsel4sched" />

    <!-- seL4 libraries (forked rt version) -->
    <project remote="sched" name="seL4_libs.git" path="projects/seL4_libs" revision="rt" >
        <linkfile src="libsel4muslcsys" dest="libs/libsel4muslcsys"/>
        <linkfile src="libsel4platsupport" dest="libs/libsel4platsupport"/>
        <linkfile src="libsel4utils" dest="libs/libsel4utils"/>
        <linkfile src="libsel4sync" dest="libs/libsel4sync"/>
        <linkfile src="libsel4vspace" dest="libs/libsel4vspace"/>
        <linkfile src="libsel4vka" dest="libs/libsel4vka"/>
        <linkfile src="libsel4debug" dest="libs/libsel4debug"/>
        <linkfile src="libsel4simple" dest="libs/libsel4simple"/>
        <linkfile src="libsel4simple-default" dest="libs/libsel4simple-default"/>
        <linkfile src="libsel4bench" dest="libs/libsel4bench"/>
    </project>

    <project name="util_libs.git" path="projects/util_libs">
        <linkfile src="libplatsupport" dest="libs/libplatsupport"/>
        <linkfile src="libcpio" dest="libs/libcpio"/>
        <linkfile src="libelf" dest="libs/libelf"/>
        <linkfile src="libutils" dest="libs/libutils"/>
    </project>

    <project name="musllibc.git" path="libs/libmuslc" revision="sel4"/>

    <project remote="seL4-projects" name="global-components.git" path="components"/>

</manifest>

